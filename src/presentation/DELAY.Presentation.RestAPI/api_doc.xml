<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DELAY.Presentation.RestAPI</name>
    </assembly>
    <members>
        <member name="F:DELAY.Core.Application.Abstractions.Services.BoardController.boardService">
            <summary>
            <inheritdoc cref="T:DELAY.Core.Application.Abstractions.Services.IUserService"/>
            </summary>
        </member>
        <member name="F:DELAY.Core.Application.Abstractions.Services.BoardController.logger">
            <summary>
            <inheritdoc cref="T:Microsoft.Extensions.Logging.ILogger"/>
            </summary>
        </member>
        <member name="F:DELAY.Core.Application.Abstractions.Services.BoardController.mapper">
            <summary>
            <inheritdoc cref="T:DELAY.Core.Application.Abstractions.Mapper.IModelMapperService"/>
            </summary>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.BoardController.GetAsync(System.Guid)">
             <summary>
             Получение активности по ключу
             </summary>
             <param name="id">Ключ записи</param>
             <returns><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></returns>
             <remarks>
             Пример запроса:
            
                 GET /api/users/{id}
                 
             Пример ответа:
             
                 {
                   "id": "00000000-0000-0000-0000-000000000000",
                   "beginTime": "0001-01-01T00:00:00",
                   "endTime": "0001-01-01T00:00:00",
                   "type": 0,
                   "description": "string",
                   "triggeredBy": "string"
                 }
             
             </remarks>
             <response code="200">OK</response>
             <response code="404">Не удалось найти по ключу</response>
             <response code="500">Ошибка сервера</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.BoardController.AddBoard(DELAY.Core.Application.Contracts.Models.BoardApiModel)">
             <summary>
             Add user
             </summary>
             <param name="model"><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></param>
             <returns>User's key</returns>
             <remarks>
             Request:
            
                 POST /api/users
                 {
                   "name": "string",
                   "email": "string",
                   "phoneNumber": "string",
                   "description": "string",
                   "password": "string"
                 }
            
             Response:
             
                 "00000000-0000-0000-0000-000000000000"
             
             </remarks>
             <response code="201">User added</response>
             <response code="500">Server error</response>
        </member>
        <member name="F:DELAY.Core.Application.Abstractions.Services.UserController.userService">
            <summary>
            <inheritdoc cref="T:DELAY.Core.Application.Abstractions.Services.IUserService"/>
            </summary>
        </member>
        <member name="F:DELAY.Core.Application.Abstractions.Services.UserController.logger">
            <summary>
            <inheritdoc cref="T:Microsoft.Extensions.Logging.ILogger"/>
            </summary>
        </member>
        <member name="F:DELAY.Core.Application.Abstractions.Services.UserController.mapper">
            <summary>
            <inheritdoc cref="T:DELAY.Core.Application.Abstractions.Mapper.IModelMapperService"/>
            </summary>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.GetAsync(System.Guid)">
             <summary>
             Получение активности по ключу
             </summary>
             <param name="id">Ключ записи</param>
             <returns><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></returns>
             <remarks>
             Пример запроса:
            
                 GET /api/users/{id}
                 
             Пример ответа:
             
                 {
                   "id": "00000000-0000-0000-0000-000000000000",
                   "beginTime": "0001-01-01T00:00:00",
                   "endTime": "0001-01-01T00:00:00",
                   "type": 0,
                   "description": "string",
                   "triggeredBy": "string"
                 }
             
             </remarks>
             <response code="200">OK</response>
             <response code="404">Не удалось найти по ключу</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.GetByBoardAsync(System.Guid)">
             <summary>
             Получение активности по ключу
             </summary>
             <param name="id">Ключ записи</param>
             <returns><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></returns>
             <remarks>
             Пример запроса:
            
                 GET /api/users/board/{id}
                 
             Пример ответа:
             
                 {
                   "id": "00000000-0000-0000-0000-000000000000",
                   "beginTime": "0001-01-01T00:00:00",
                   "endTime": "0001-01-01T00:00:00",
                   "type": 0,
                   "description": "string",
                   "triggeredBy": "string"
                 }
             
             </remarks>
             <response code="200">OK</response>
             <response code="404">Не удалось найти по ключу</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.GetByTicketAsync(System.Guid)">
             <summary>
             Получение активности по ключу
             </summary>
             <param name="id">Ключ записи</param>
             <returns><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></returns>
             <remarks>
             Пример запроса:
            
                 GET /api/users/ticket/{id}
                 
             Пример ответа:
             
                 {
                   "id": "00000000-0000-0000-0000-000000000000",
                   "beginTime": "0001-01-01T00:00:00",
                   "endTime": "0001-01-01T00:00:00",
                   "type": 0,
                   "description": "string",
                   "triggeredBy": "string"
                 }
             
             </remarks>
             <response code="200">OK</response>
             <response code="404">Не удалось найти по ключу</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.GetAllAsync(DELAY.Presentation.RestAPI.Contracts.Request.PagedDataRequest)">
             <summary>
             Получение страницы активностей по заданным параметрам
             </summary>
             <param name="options"><inheritdoc cref="T:DELAY.Presentation.RestAPI.Contracts.Request.PagedDataRequest"/></param>
             <returns><inheritdoc cref="!:PagedDataApiModel"/></returns>
             <remarks>
             Пример запроса:
            
                 POST /api/events/get-all
                 {
                    "offset": 0,
                    "limit": 0,
                    "filter": "string",
                    "sort": [
                       "string"
                    ]
                 }
            
             Пример ответа:
             
                 {
                   "events": [
                     {
                       "id": "00000000-0000-0000-0000-000000000000",
                       "beginTime": "0001-01-01T00:00:00",
                       "endTime": "0001-01-01T00:00:00",
                       "type": 0,
                       "description": null,
                       "triggeredBy": null
                     }
                   ],
                   "hasNext": true,
                   "hasPrev": false
                 }
             
             </remarks>
             <response code="200">OK</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.GetAsync(System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Получение активности по ключу
             </summary>
             <param name="id">Ключ записи</param>
             <returns><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></returns>
             <remarks>
             Пример запроса:
            
                 GET /api/users/{id}
                 
             Пример ответа:
             
                 {
                   "id": "00000000-0000-0000-0000-000000000000",
                   "beginTime": "0001-01-01T00:00:00",
                   "endTime": "0001-01-01T00:00:00",
                   "type": 0,
                   "description": "string",
                   "triggeredBy": "string"
                 }
             
             </remarks>
             <response code="200">OK</response>
             <response code="404">Не удалось найти по ключу</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.GetKeyNamesAsync(System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Получение активности по ключу
             </summary>
             <param name="id">Ключ записи</param>
             <returns><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></returns>
             <remarks>
             Пример запроса:
            
                 GET /api/users/{id}
                 
             Пример ответа:
             
                 {
                   "id": "00000000-0000-0000-0000-000000000000",
                   "beginTime": "0001-01-01T00:00:00",
                   "endTime": "0001-01-01T00:00:00",
                   "type": 0,
                   "description": "string",
                   "triggeredBy": "string"
                 }
             
             </remarks>
             <response code="200">OK</response>
             <response code="404">Не удалось найти по ключу</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.AddAsync(DELAY.Core.Application.Contracts.Models.UserApiModel)">
             <summary>
             Add user
             </summary>
             <param name="model"><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></param>
             <returns>User's key</returns>
             <remarks>
             Request:
            
                 POST /api/users
                 {
                   "name": "string",
                   "email": "string",
                   "phoneNumber": "string",
                   "description": "string",
                   "password": "string"
                 }
            
             Response:
             
                 "00000000-0000-0000-0000-000000000000"
             
             </remarks>
             <response code="201">User added</response>
             <response code="500">Server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.UpdateAsync(DELAY.Core.Application.Contracts.Models.UserApiModel)">
             <summary>
             Update user
             </summary>
             <param name="model"><inheritdoc cref="T:DELAY.Core.Application.Contracts.Models.UserApiModel"/></param>
             <returns>Updated count</returns>
             <remarks>
             Request:
            
                 PUT /api/users
                 {
                   "name": "string",
                   "email": "string",
                   "phoneNumber": "string",
                   "description": "string",
                   "password": "string"
                 }
            
             Response:
             
                 "0"
             
             </remarks>
             <response code="202">Accepted</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.DeleteAsync(System.Guid)">
             <summary>
             Удаление активностей по параметрам фильтра
             </summary>
             <param name="id">Фильтр записей для удаления</param>
             <remarks>
             Пример запроса:
            
                 DELETE /api/users/{id}
            
             Пример ответа:
             
                 0
             
             </remarks>
             <response code="202">Accepted</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Core.Application.Abstractions.Services.UserController.DeleteAsync(System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Delete by ids
             </summary>
             <param name="ids">Records ids</param>
             <remarks>
             Пример запроса:
            
                 POST /api/users/delete-multiple
                 {
                   "ids": ["string"],
                 }
                 
             Пример ответа:
             
                 0
             
             </remarks>
             <response code="202">Accepted</response>
             <response code="500">Internal server error</response>
        </member>
        <member name="M:DELAY.Presentation.RestAPI.DependencyInjection.AddPresentation(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавление сервисов API
            </summary>
            <param name="services"><inheritdoc cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns></returns>
        </member>
        <member name="M:DELAY.Presentation.RestAPI.DependencyInjection.ConfigureWebApplication(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Конфигурация <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>
            </summary>
            <param name="builder"><inheritdoc cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns></returns>
        </member>
        <member name="M:DELAY.Presentation.RestAPI.DependencyInjection.AddLogger(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Добавление логирования <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>
            </summary>
            <param name="builder"><inheritdoc cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns></returns>
        </member>
        <member name="M:DELAY.Presentation.RestAPI.DependencyInjection.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Конфигурация Swagger
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
    </members>
</doc>
